// <auto-generated />
using System;
using AssetIn.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetIn.Server.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AssetIn.Server.Models.Asset", b =>
                {
                    b.Property<int>("AssetlD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AssetlD"));

                    b.Property<int>("AssetCatagoryID")
                        .HasColumnType("int");

                    b.Property<string>("AssetIdentificationNumber")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AssetName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("AssetStatuslD")
                        .HasColumnType("int");

                    b.Property<int>("AssetTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("DepreciationRate")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("OrganizationlD")
                        .HasColumnType("int");

                    b.Property<string>("Problem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("AssetlD");

                    b.HasIndex("AssetCatagoryID");

                    b.HasIndex("AssetIdentificationNumber")
                        .IsUnique();

                    b.HasIndex("AssetStatuslD");

                    b.HasIndex("AssetTypeID");

                    b.HasIndex("OrganizationlD");

                    b.HasIndex("SerialNumber")
                        .IsUnique();

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("AssetIn.Server.Models.Organization", b =>
                {
                    b.Property<int>("OrganizationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OrganizationID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IndustryType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("OrganizationID");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("AssetIn.Server.Models.OrganizationsAssetAssignReturn", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AssetID")
                        .HasColumnType("int");

                    b.Property<int>("AssignedByUserID")
                        .HasColumnType("int");

                    b.Property<int>("AssignedToUserID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("AssetID");

                    b.HasIndex("AssignedByUserID");

                    b.HasIndex("AssignedToUserID");

                    b.ToTable("OrganizationsAssetAssignReturns");
                });

            modelBuilder.Entity("AssetIn.Server.Models.OrganizationsAssetCatagory", b =>
                {
                    b.Property<int>("OrganizationsAssetCatagoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OrganizationsAssetCatagoryID"));

                    b.Property<string>("OrganizationsAssetCatagoryName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("OrganizationsID")
                        .HasColumnType("int");

                    b.HasKey("OrganizationsAssetCatagoryID");

                    b.HasIndex("OrganizationsID");

                    b.ToTable("OrganizationsAssetCatagories");
                });

            modelBuilder.Entity("AssetIn.Server.Models.OrganizationsAssetMaintanence", b =>
                {
                    b.Property<int>("OrganizationsAssetMaintanenceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OrganizationsAssetMaintanenceID"));

                    b.Property<int>("AssetID")
                        .HasColumnType("int");

                    b.Property<string>("MaintanenceResult")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Problem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RetunDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("OrganizationsAssetMaintanenceID");

                    b.HasIndex("AssetID");

                    b.ToTable("OrganizationsAssetMaintanences");
                });

            modelBuilder.Entity("AssetIn.Server.Models.OrganizationsAssetRequest", b =>
                {
                    b.Property<int>("OrganizationsAssetRequestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OrganizationsAssetRequestID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("RequestStatus")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("OrganizationsAssetRequestID");

                    b.HasIndex("UserID");

                    b.ToTable("OrganizationsAssetRequests");
                });

            modelBuilder.Entity("AssetIn.Server.Models.OrganizationsAssetRetirement", b =>
                {
                    b.Property<int>("OrganizationsAssetRetirementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OrganizationsAssetRetirementID"));

                    b.Property<int>("AssetID")
                        .HasColumnType("int");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RetirementDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RetirementReason")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("OrganizationsAssetRetirementID");

                    b.HasIndex("AssetID");

                    b.ToTable("OrganizationsAssetRetirements");
                });

            modelBuilder.Entity("AssetIn.Server.Models.OrganizationsAssetStatus", b =>
                {
                    b.Property<int>("OrganizationsAssetStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OrganizationsAssetStatusID"));

                    b.Property<string>("OrganizationsAssetStatusName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("OrganizationsID")
                        .HasColumnType("int");

                    b.HasKey("OrganizationsAssetStatusID");

                    b.HasIndex("OrganizationsID");

                    b.ToTable("OrganizationsAssetStatuses");
                });

            modelBuilder.Entity("AssetIn.Server.Models.OrganizationsAssetType", b =>
                {
                    b.Property<int>("OrganizationsAssetTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OrganizationsAssetTypeID"));

                    b.Property<string>("OrganizationsAssetTypeName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("OrganizationsID")
                        .HasColumnType("int");

                    b.HasKey("OrganizationsAssetTypeID");

                    b.HasIndex("OrganizationsID");

                    b.ToTable("OrganizationsAssetTypes");
                });

            modelBuilder.Entity("AssetIn.Server.Models.OrganizationsDomain", b =>
                {
                    b.Property<int>("OrganizationsDomainID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OrganizationsDomainID"));

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("OrganizationsID")
                        .HasColumnType("int");

                    b.HasKey("OrganizationsDomainID");

                    b.HasIndex("OrganizationsID");

                    b.ToTable("OrganizationsDomains");
                });

            modelBuilder.Entity("AssetIn.Server.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("AssetIn.Server.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ProfilePicturePath")
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AssetIn.Server.Models.UserRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<bool>("RoleStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.HasIndex("UserID");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("AssetIn.Server.Models.Vendor", b =>
                {
                    b.Property<int>("VendorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("VendorID"));

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OfficeAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("VendorID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("AssetIn.Server.Models.VendorProcurementDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DispachDate")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("GrandTotal")
                        .HasColumnType("float");

                    b.Property<string>("HardlnvoiceImagePath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductCatagory")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("ProductPrice")
                        .HasColumnType("float");

                    b.Property<string>("ProductStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("VendorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("VendorID");

                    b.ToTable("VendorProcurementDetails");
                });

            modelBuilder.Entity("AssetIn.Server.Models.Asset", b =>
                {
                    b.HasOne("AssetIn.Server.Models.OrganizationsAssetCatagory", "OrganizationsAssetCatagory")
                        .WithMany()
                        .HasForeignKey("AssetCatagoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetIn.Server.Models.OrganizationsAssetStatus", "OrganizationsAssetStatus")
                        .WithMany()
                        .HasForeignKey("AssetStatuslD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetIn.Server.Models.OrganizationsAssetType", "OrganizationsAssetType")
                        .WithMany()
                        .HasForeignKey("AssetTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetIn.Server.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationlD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("OrganizationsAssetCatagory");

                    b.Navigation("OrganizationsAssetStatus");

                    b.Navigation("OrganizationsAssetType");
                });

            modelBuilder.Entity("AssetIn.Server.Models.OrganizationsAssetAssignReturn", b =>
                {
                    b.HasOne("AssetIn.Server.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetIn.Server.Models.User", "AssignedByUser")
                        .WithMany()
                        .HasForeignKey("AssignedByUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetIn.Server.Models.User", "AssignedToUser")
                        .WithMany()
                        .HasForeignKey("AssignedToUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("AssignedByUser");

                    b.Navigation("AssignedToUser");
                });

            modelBuilder.Entity("AssetIn.Server.Models.OrganizationsAssetCatagory", b =>
                {
                    b.HasOne("AssetIn.Server.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("AssetIn.Server.Models.OrganizationsAssetMaintanence", b =>
                {
                    b.HasOne("AssetIn.Server.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("AssetIn.Server.Models.OrganizationsAssetRequest", b =>
                {
                    b.HasOne("AssetIn.Server.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AssetIn.Server.Models.OrganizationsAssetRetirement", b =>
                {
                    b.HasOne("AssetIn.Server.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("AssetIn.Server.Models.OrganizationsAssetStatus", b =>
                {
                    b.HasOne("AssetIn.Server.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("AssetIn.Server.Models.OrganizationsAssetType", b =>
                {
                    b.HasOne("AssetIn.Server.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("AssetIn.Server.Models.OrganizationsDomain", b =>
                {
                    b.HasOne("AssetIn.Server.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("AssetIn.Server.Models.UserRole", b =>
                {
                    b.HasOne("AssetIn.Server.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetIn.Server.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AssetIn.Server.Models.VendorProcurementDetail", b =>
                {
                    b.HasOne("AssetIn.Server.Models.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor");
                });
#pragma warning restore 612, 618
        }
    }
}
